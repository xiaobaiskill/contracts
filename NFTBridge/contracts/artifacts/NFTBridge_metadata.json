{
	"compiler": {
		"version": "0.8.9+commit.e5eed63a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_msgBus",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "returnData",
						"type": "bytes"
					}
				],
				"name": "ExtCallErr",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "FeeClaimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "messageBus",
						"type": "address"
					}
				],
				"name": "MessageBusUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "PauserAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "PauserRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "nft",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "srcChid",
						"type": "uint64"
					}
				],
				"name": "Received",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "srcNft",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "dstChid",
						"type": "uint64"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "dstNft",
						"type": "address"
					}
				],
				"name": "Sent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "dstChid",
						"type": "uint64"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "dstNftBridge",
						"type": "address"
					}
				],
				"name": "SetDestBridge",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "srcNft",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "dstChid",
						"type": "uint64"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "dstNft",
						"type": "address"
					}
				],
				"name": "SetDestNFT",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "nft",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isOrig",
						"type": "bool"
					}
				],
				"name": "SetOrigNFT",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "chid",
						"type": "uint64"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"name": "SetTxFee",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "addPauser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					}
				],
				"name": "delOrigNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"name": "destBridge",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"name": "destNFTAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"name": "destTxFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "srcChid",
						"type": "uint64"
					},
					{
						"internalType": "bytes",
						"name": "_message",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "executeMessage",
				"outputs": [
					{
						"internalType": "enum IMessageReceiverApp.ExecutionStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint64",
						"name": "_srcChainId",
						"type": "uint64"
					},
					{
						"internalType": "bytes",
						"name": "_message",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "_executor",
						"type": "address"
					}
				],
				"name": "executeMessageWithTransfer",
				"outputs": [
					{
						"internalType": "enum IMessageReceiverApp.ExecutionStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint64",
						"name": "_srcChainId",
						"type": "uint64"
					},
					{
						"internalType": "bytes",
						"name": "_message",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "_executor",
						"type": "address"
					}
				],
				"name": "executeMessageWithTransferFallback",
				"outputs": [
					{
						"internalType": "enum IMessageReceiverApp.ExecutionStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_message",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "_executor",
						"type": "address"
					}
				],
				"name": "executeMessageWithTransferRefund",
				"outputs": [
					{
						"internalType": "enum IMessageReceiverApp.ExecutionStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_msgBus",
						"type": "address"
					}
				],
				"name": "init",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "isPauser",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "messageBus",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "origNFT",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "pausers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "removePauser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renouncePauser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "_dstChid",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "_sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_uri",
						"type": "string"
					}
				],
				"name": "sendMsg",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint64",
						"name": "_dstChid",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					}
				],
				"name": "sendTo",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "dstChid",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "dstNftBridge",
						"type": "address"
					}
				],
				"name": "setDestBridge",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64[]",
						"name": "dstChid",
						"type": "uint64[]"
					},
					{
						"internalType": "address[]",
						"name": "dstNftBridge",
						"type": "address[]"
					}
				],
				"name": "setDestBridges",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "srcNft",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "dstChid",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "dstNft",
						"type": "address"
					}
				],
				"name": "setDestNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "srcNft",
						"type": "address"
					},
					{
						"internalType": "uint64[]",
						"name": "dstChid",
						"type": "uint64[]"
					},
					{
						"internalType": "address[]",
						"name": "dstNft",
						"type": "address[]"
					}
				],
				"name": "setDestNFTs",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_messageBus",
						"type": "address"
					}
				],
				"name": "setMessageBus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					}
				],
				"name": "setOrigNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "chid",
						"type": "uint64"
					},
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"name": "setTxFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "_dstChid",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "totalFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)": {
					"params": {
						"_amount": "The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.",
						"_executor": "Address who called the MessageBus execution function",
						"_message": "Arbitrary message bytes originated from and encoded by the source app contract",
						"_sender": "The address of the source app contract",
						"_srcChainId": "The source chain ID where the transfer is originated from",
						"_token": "The address of the token that comes out of the bridge"
					}
				},
				"executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)": {
					"params": {
						"_amount": "The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.",
						"_executor": "Address who called the MessageBus execution function",
						"_message": "Arbitrary message bytes originated from and encoded by the source app contract",
						"_sender": "The address of the source app contract",
						"_srcChainId": "The source chain ID where the transfer is originated from",
						"_token": "The address of the token that comes out of the bridge"
					}
				},
				"executeMessageWithTransferRefund(address,uint256,bytes,address)": {
					"params": {
						"_amount": "The amount of the original transfer",
						"_executor": "Address who called the MessageBus execution function",
						"_message": "The same message associated with the original transfer",
						"_token": "The token address of the original transfer"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"sendTo(address,uint256,uint64,address)": {
					"params": {
						"_dstChid": "dest chain ID",
						"_id": "nft token ID to bridge",
						"_nft": "address of source NFT contract",
						"_receiver": "receiver address on dest chain"
					}
				},
				"totalFee(uint64,address,uint256)": {
					"details": "we use _nft address for user as it's same length so same msg cost",
					"params": {
						"_dstChid": "dest chain ID",
						"_id": "token ID to bridge (need to get accurate tokenURI length)",
						"_nft": "address of source NFT contract"
					},
					"returns": {
						"_0": "total fee needed for user tx"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "NFT Bridge ",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"destBridge(uint64)": {
					"notice": "per dest chain id NFTBridge address"
				},
				"destNFTAddr(address,uint64)": {
					"notice": "first key is NFT address on this chain, 2nd key is dest chain id, value is address on dest chain"
				},
				"destTxFee(uint64)": {
					"notice": "per dest chain id executor fee in this chain's gas token"
				},
				"executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)": {
					"notice": "Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address."
				},
				"executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)": {
					"notice": "Only called by MessageBus (MessageBusReceiver) if         1. executeMessageWithTransfer reverts, or         2. executeMessageWithTransfer returns ExecutionStatus.Fail"
				},
				"executeMessageWithTransferRefund(address,uint256,bytes,address)": {
					"notice": "Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract"
				},
				"origNFT(address)": {
					"notice": "only set to true if NFT addr on this chain is the orig, so we will use deposit/withdraw instead of burn/mint. not applicable for mcn nft (always burn/mint)"
				},
				"sendTo(address,uint256,uint64,address)": {
					"notice": "locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain"
				},
				"totalFee(uint64,address,uint256)": {
					"notice": "totalFee returns gas token value to be set in user tx, includes both cbridge msg fee and executor fee on dest chain"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/NFTBridge.sol": "NFTBridge"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/security/Pausable.sol": {
			"keccak256": "0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87",
			"license": "MIT",
			"urls": [
				"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e",
				"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/NFTBridge.sol": {
			"keccak256": "0x2fbd0cd8c0b7f29e21b143999fa3d3a991702e83b2d8e82874c81e2287a57d02",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://3f9c34f878486f599918acaed266c5400fd4fa4208ad28e946991c6330c447f8",
				"dweb:/ipfs/QmTb2hLKLCRwFCtPixvDkYiexePuFDUCzPMJmmP4QM1ETS"
			]
		},
		"contracts/framework/MessageBusAddress.sol": {
			"keccak256": "0x3d226bc999ab346065c3a9f1921ca4d82b4d17a806219221e6c7e0f3ffe25877",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://bc5fc3319ca81a6e39549f4090301b8495b9dcbab11637a2d953e488b5cb7019",
				"dweb:/ipfs/QmcGhy4zwLJYEzM86Xg19PstYQw5KSRnk1rUTKPFnxCGBs"
			]
		},
		"contracts/framework/MessageReceiverApp.sol": {
			"keccak256": "0x83a77daf048cf19fa0a2c45eb577afb6d6363367fe012869201833e34a2b4e96",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://a890e8aa72fdcc70390d406c369a9bec1720c5268162967afcae26872e82b067",
				"dweb:/ipfs/QmctG9AEJ2xjKyWiq45wjrYQiz9YKv9EqQRT7YKLtkwkkY"
			]
		},
		"contracts/interfaces/IMessageBus.sol": {
			"keccak256": "0x2c76466764c1f3785a7f910ea6904f854050444ebf2968c5cb58d1efdff42cfb",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://8bad5e60081f8c82fd07dc8ed03ab3648b18fe407ebd9bb161e545d020264773",
				"dweb:/ipfs/QmWCxrtq2Yjs2QnxX1wB71tAhnAJo5tLkvft1nfTGf4CpJ"
			]
		},
		"contracts/interfaces/IMessageReceiverApp.sol": {
			"keccak256": "0x9e4d6ec7303c40c1a8c897655c3d6ef6ae1f9fa7e8c806e7c6878ff01b51e67b",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://32eac7148c355dd61669356b1d3f8cd2218ce80a1c6006c57daae729f0593bfb",
				"dweb:/ipfs/QmVp3XLxhfpJJ8pmN1qv1V5itoZuEHS7qqX98Jfo3nRGD6"
			]
		},
		"contracts/libraries/MsgDataTypes.sol": {
			"keccak256": "0x654e8eb09155ff4f67495f4b2417331aa67706b50942be8439062bec93d673e5",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://86ad13f0e651830b8cc01c5b787e5401f4e1942098d27762e96f3f8fea7835fd",
				"dweb:/ipfs/QmTFSQWN9MTVdr9gutf1wqi7S8SCTJabrryi4PT9fWMsAM"
			]
		},
		"contracts/safeguard/Ownable.sol": {
			"keccak256": "0x2a92103195b8dce0f34fdf9bf7f94ddf38bf8edf0c0fd4be21323c47016687e9",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://9bb9e6752d4d44e1586c36bdeaff9f7c0bd9026f2b33f3f506f7bdfbccf3166f",
				"dweb:/ipfs/QmXLwLdty7CaCMeunSR6nEg4ftQ7E2K6kHDUJawDA56s6P"
			]
		},
		"contracts/safeguard/Pauser.sol": {
			"keccak256": "0x5d6bf2c82f3467d50d9f7c653b20a47ab3bbe3e81699600fc03eb8f796d005bb",
			"license": "GPL-3.0-only",
			"urls": [
				"bzz-raw://a31af2433f00583dd879fe2e5700fad75b772fc3a41c41e7057a8964769c4a23",
				"dweb:/ipfs/QmRHrS9AHgrsAUpjXFjCWAH2EMtNsnyDYnbGHJrEmNeJL1"
			]
		}
	},
	"version": 1
}